"use client"
import Head from 'next/head'
import { auth } from '../firebase/config'
import { GoogleAuthProvider, signInWithPopup, signInWithRedirect, signOut } from 'firebase/auth'
import { useContext, useEffect } from 'react'
import { UserContext } from '../contexts/UserContext'


export default function Home() {
  const { user } = useContext(UserContext)
  const onLogin = async () => {
    const provider = new GoogleAuthProvider()
    signInWithPopup(auth, provider)
      .then((result) => {
        const credential = GoogleAuthProvider.credentialFromResult(result)
        const token = credential?.accessToken
        const user = result.user
        console.log('user', user)
      }).catch((error) => {
        console.log('error', error)
      });
  }
  // const onLogin = async () =>  {
  //   const provider = new GoogleAuthProvider()

  //   try {
  //     const res = await signInWithRedirect(auth, provider)
  //     console.log('res', res)
  //   } catch (error) {
  //     console.log('error', error)
  //   }
  // }
  
  const onLogout = () => {
    signOut(auth);
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-between p-24">
        <section className='flex justify-center items-center gap-4 flex-col'>
          <menu className='flex flex-row gap-2'>
            <li>
          <button className='p-2 px-4 rounded-md bg-red-400' onClick={onLogout}>Log out</button>

            </li>
            <li>
          <button className='p-2 px-4 rounded-md bg-indigo-400' onClick={onLogin}>Log in</button>

            </li>
          </menu>
          <article className='flex flex-col items-center justify-center'>
            <h1 className='text-4xl'>Name: {user?.name}</h1>
            <p className='text-2xl'>Email: {user?.email}</p>
          </article>
        </section>
      </main>
    </>
  )
}
